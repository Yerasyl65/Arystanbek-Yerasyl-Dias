from django.shortcuts import render, redirect
from django.contrib.auth.forms import AuthenticationForm
from django.contrib.auth import login, logout
from django.contrib.auth.decorators import login_required
from django.contrib import messages
from django.http import HttpResponseForbidden

from .forms import CustomUserCreationForm, HomeworkForm, GradeForm
from .models import Schedule, Grade, Homework

# –î–µ–∫–æ—Ä–∞—Ç–æ—Ä: –¥–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –¥–ª—è —É—á–∏—Ç–µ–ª–µ–π
def teacher_required(view_func):
    def _wrapped(request, *args, **kwargs):
        if not request.user.is_authenticated or request.user.role != 'teacher':
            return HttpResponseForbidden("–î–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –¥–ª—è —É—á–∏—Ç–µ–ª–µ–π")
        return view_func(request, *args, **kwargs)
    return _wrapped

# üë§ –õ–û–ì–ò–ù
def login_view(request):
    if request.method == 'POST':
        form = AuthenticationForm(data=request.POST)
        if form.is_valid():
            user = form.get_user()
            login(request, user)
            return redirect('schedule')
    else:
        form = AuthenticationForm()
    return render(request, 'login.html', {'form': form})

# üëã –í–´–•–û–î
def logout_view(request):
    logout(request)
    return redirect('login')

# üë§ –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø
def register_view(request):
    if request.method == 'POST':
        form = CustomUserCreationForm(request.POST)
        if form.is_valid():
            user = form.save()
            login(request, user)
            return redirect('schedule')
    else:
        form = CustomUserCreationForm()
    return render(request, 'register.html', {'form': form})

# üè† –õ–ê–ù–î–ò–ù–ì
def landing_view(request):
    return render(request, 'index.html')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º templates/index.html

# üìÖ –†–ê–°–ü–ò–°–ê–ù–ò–ï
@login_required
def schedule_view(request):
    schedule = Schedule.objects.all()
    return render(request, 'schedule.html', {'schedule': schedule})

# üìä –û–¶–ï–ù–ö–ò (—Å–ø–∏—Å–æ–∫)
@login_required
def grades_view(request):
    grades = Grade.objects.all()
    return render(request, 'grades.html', {'grades': grades})

# üìù –î–û–ú–ê–®–ö–ê (—Å–ø–∏—Å–æ–∫)
@login_required
def homework_view(request):
    homework = Homework.objects.all()
    return render(request, 'homework.html', {'homework': homework})

# ‚ûï –î–û–ë–ê–í–ò–¢–¨ –î–û–ú–ê–®–ù–ï–ï –ó–ê–î–ê–ù–ò–ï
@login_required
@teacher_required
def add_homework(request):
    form = HomeworkForm(request.POST or None)
    if request.method == 'POST' and form.is_valid():
        hw = form.save(commit=False)
        hw.teacher = request.user
        hw.save()
        messages.success(request, "–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ")
        return redirect('homework')
    return render(request, 'add_homework.html', {'form': form})

# ‚ûï –î–û–ë–ê–í–ò–¢–¨ –û–¶–ï–ù–ö–£
@login_required
@teacher_required
def add_grade(request):
    form = GradeForm(request.POST or None)
    if request.method == 'POST' and form.is_valid():
        form.save()
        messages.success(request, "–û—Ü–µ–Ω–∫–∞ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∞")
        return redirect('grades')
    return render(request, 'add_grade.html', {'form': form})

# üë§ –ü–†–û–§–ò–õ–¨
@login_required
def profile_view(request):
    return render(request, 'profile.html')
